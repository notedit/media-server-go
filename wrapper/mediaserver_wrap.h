/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: mediaserver.i

#ifndef SWIG_native_WRAP_H_
#define SWIG_native_WRAP_H_

class Swig_memory;

class SwigDirector_DTLSICETransportListener : public DTLSICETransportListener
{
 public:
  SwigDirector_DTLSICETransportListener(int swig_p);
  virtual ~SwigDirector_DTLSICETransportListener();
  void _swig_upcall_onDTLSStateChange(uint32_t state) {
    DTLSICETransportListener::onDTLSStateChange(state);
  }
  virtual void onDTLSStateChange(uint32_t state);
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

class SwigDirector_SenderSideEstimatorListener : public SenderSideEstimatorListener
{
 public:
  SwigDirector_SenderSideEstimatorListener(int swig_p);
  virtual ~SwigDirector_SenderSideEstimatorListener();
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

class SwigDirector_MediaFrameListenerFacade : public MediaFrameListenerFacade
{
 public:
  SwigDirector_MediaFrameListenerFacade(int swig_p);
  virtual ~SwigDirector_MediaFrameListenerFacade();
  void _swig_upcall_onMediaFrame(MediaFrame const &frame) {
    MediaFrameListenerFacade::onMediaFrame(frame);
  }
  virtual void onMediaFrame(MediaFrame const &frame);
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

class SwigDirector_ActiveTrackListener : public ActiveTrackListener
{
 public:
  SwigDirector_ActiveTrackListener(int swig_p);
  virtual ~SwigDirector_ActiveTrackListener();
  void _swig_upcall_onActiveTrackchanged(uint32_t id) {
    ActiveTrackListener::onActiveTrackchanged(id);
  }
  virtual void onActiveTrackchanged(uint32_t id);
 private:
  intgo go_val;
  Swig_memory *swig_mem;
};

#endif
